main.c
include libs
include local libs

error checking

main
init struct tasks
int numoftasks
i,j
option

welcome & option
option 1, edit chart
load chart with placeholder values

option 2
how many tasks, loop
enter name, start month, end month, num of dependencies, dependency array
error check the lot

edit test or quit

edit
enter name, compare, find position of task array it's at
new name, start end month, dependencies, dependency array

quit
exit

-- 

chart.c

--

global vars:
maxlength = 0
linelength = 0

--

int function to find max length of string
args:
task array

int max length:
for tasks, 
if length n is greater than max length (initialised to 0), 
	set n as max length
set max length

--

void print lines
// for separation

args: linelength
\n
for i = 0 ; i < linelength
	print "-"
\n

--

void chart function
args:
struct
int amount of tasks

clear screen
linelength = 0
maxlength = 0

// topmost line for months
	first cell, empty string with padding of max length
print EMPTY with padding of maxlength
linelength += strlen ^^

for months (12)
i = JAN (1)
print " %month "
|
linelength += strlen ^^

print " Dependencies"
linelength += strlen ^^
linelength += 20

print lines of length linelength

ideas:
(maybe treat line like a whole string and then find length?)
	do the same to a str var as the console for the first line, return length
somewhat constant
	only variable length 

// tasks

for i=0, i < amt of tasks
	print task[i] name with padding of maxlength var
	|
for months
	if task[i] start month >= MONTH (enum value) && task[i] end month <= MONTH (enum value)
		print "  X  "
	else 	print "     "
	|

for j=0 ; j < task[i] dependencies quantity
	print "%d " dependent task[i] array[j]

printlines function

-- 

placeholder.c
include libs

struct Task placeholder[MAX_TASKS] = {
        {"task_1",  1,  2,  0, {0}},
        {"task_2",  1,  4,  0, {0}},
        {"task_3",  3,  5,  1, {1}},
        {"task_4",  2,  4,  1, {1}},
        {"task_5",  4,  5,  1, {2}},
        {"task_6",  6,  7,  2, {3, 4}},
        {"task_7",  7,  7,  1, {4}},
        {"task_8",  8,  9,  1, {6}},
        {"task_9",  8,  10, 1, {4}},
        {"task_10", 11, 12, 2, {7, 8}}
};

-

struct.c

struct Task {
	char name[MAX_LENGTH];
	int start_month;
	int end_month;
	int numbOfDepen;
	int dependencies[MAX_TASKS];
};

-

definitions.h

#ifndef BO_ASSIGNMENT_2_DEFINITIONS_H
#define BO_ASSIGNMENT_2_DEFINITIONS_H

#define MAX_LENGTH  32
#define MAX_TASKS   10
#define EMPTY	    ""
